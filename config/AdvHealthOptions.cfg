# Configuration file

general {
    # DEFAULT = Settings are used as default in the world creation screen.
    # LOCK    = Settings are locked in the world creation screen.
    # HIDDEN  = Settings are used automatically and world creation screen is not modified.
    # When using the DEFAULT setting, new worlds will generate with a world-specific config file.
    # Once a world has a config file, changing the global settings will have no effect on that world.
    S:control=LOCK

    # The description shown when CUSTOM regen mode is selected.
    # Can be a string to be translated, for example 'selectWorld.advhealthoptions.regenMode.hard.desc'.
    S:description=obsidian Modpack Regen Mode

    # Choose a preset you want to go with, or CUSTOM if you want to build your own.
    # WARNING: If you select anything other than CUSTOM, all settings will be overwritten!
    # Valid values are PEACEFUL, EASY, NORMAL, HARD, HARDCORE, ULTRAHARDCORE, CUSTOM.
    S:preset=CUSTOM
}


##########################################################################################################
# hurtpenalty
#--------------------------------------------------------------------------------------------------------#
# When taking damage, a variable amount of 'penalty time' is added.
# During this time, health regeneration is decreased or completely inactive.
##########################################################################################################

hurtpenalty {
    # Penalty time where regeneration speed decreases linearly.
    # When the penalty time is larger than this amount, regeneration is inactive.
    D:buffer=120.0

    # Maximum penalty time that can be accumulated.
    D:maximum=300.0

    # Penalty time in seconds added per point of damage (= half a heart).
    # When no damage is taken from a hit, half of this value is added instead.
    D:time=10.0

    # Maximum penalty time added at once when taking damage.
    D:timeMaximum=40.0
}


misc {
    # ENABLE  = Hunger functions like normal and affects regeneration speed.
    # DISABLE = Hunger is completely disabled, food can be eaten but is ignored.
    # HEALTH  = Hunger is disabled, eating food directly translates to health.
    # When hunger is disabled the food meter will internally be locked at 8, enough to sprint.
    S:hunger=ENABLE
}


regeneration {
    # Exhaustion added when healing naturally (higher = more food needed).
    D:exhaustion=6.0

    # Minimum time in seconds between healing half a heart. Use 0 to disable.
    D:healTime=20.0

    # Natural regeneration is at its maximum at and above this hunger level. Valid values: 0 - 20.
    I:hungerMaximum=17

    # Natural regeneration starts at this hunger level. Valid values: 0 - 20.
    I:hungerMinimum=13

    # Regeneration speed is multiplied by this if food poisoned (for example from rotten flesh).
    D:hungerPoisonFactor=0.3
}


respawn {
    # Food players respawn with after death. Valid values: 0 - 20.
    I:food=10

    # Health players respawn with after death. Valid values: 1 - 20.
    I:health=14

    # Penalty time players respawn with after death.
    # Can be larger than the maximum hurt penalty time.
    D:hurtPenalty=0.0

    # Shield points players respawn with after death.
    # The shield remains until it's used up. Valid values: 0 - 40.
    I:shield=0
}


shield {
    # Maximum shield points that can be recharged. Use 0 to disable. Valid values: 0 - 40.
    I:maximum=10

    # SUBTRACTION = Decreases damage taken before armor calculation.
    # ABSORPTION  = Uses vanilla absorption hearts, applied after armor.
    S:mode=SUBTRACTION

    # NONE   = Maximum shield is not affected by anything.
    # ARMOR  = Maximum shield is affected by armor points.
    # HEALTH = Maximum shield is affected by current health.
    S:modifier=ARMOR

    # Time it takes to recharge one shield point.
    D:rechargeTime=20.0

    # NONE = Both shield and health can regenerate at the same time.
    # SHIELD_REQ_HEALTH = Full health is required for the shield to recharge.
    # HEALTH_REQ_SHIELD = Health regeneration is paused while shield is not full.
    S:requirement=NONE

    # Time for which the shield doesn't recharge after being hit.
    D:timeout=15.0
}


